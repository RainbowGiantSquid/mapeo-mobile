// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SyncView tests snapshot 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#3366ff",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListHeaderComponent={
      <SyncHeader
        closeSyncView={[Function]}
        deviceText="Available Devices"
        syncStopped={false}
      />
    }
    data={
      Array [
        Object {
          "id": "0",
          "name": "deviceName",
          "selected": false,
          "syncStatus": "notStarted",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    invertStickyHeaders={undefined}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEnabled={true}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "width": 750,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#3366ff",
                "flexDirection": "row",
                "height": 65,
                "justifyContent": "center",
                "paddingHorizontal": 15,
              }
            }
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "left": 15,
                  "opacity": 1,
                  "position": "absolute",
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={false}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "fontSize": 30,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Design Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                  ]
                }
              >
                ï…–
              </Text>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "column",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "alignSelf": "flex-start",
                    "color": "#ffffff",
                    "fontSize": 18,
                    "fontWeight": "700",
                  }
                }
              >
                Sync
              </Text>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#17317c",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingHorizontal": 10,
                  "paddingVertical": 10,
                },
                null,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#ffffff",
                  "fontSize": 12,
                  "fontWeight": "700",
                }
              }
            >
              Available Devices
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#2752d1",
                  "borderBottomWidth": 1,
                  "flexDirection": "row",
                  "height": 80,
                  "justifyContent": "flex-start",
                  "paddingHorizontal": 20,
                  "width": 750,
                },
                Object {
                  "backgroundColor": "#3366ff",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "flexDirection": "column",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "white",
                    "fontSize": 18,
                    "fontWeight": "700",
                  }
                }
              >
                deviceName
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "white",
                    "fontSize": 12,
                    "fontWeight": "400",
                  }
                }
              >
                via WiFi
              </Text>
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "justifyContent": "center",
                  "opacity": 1,
                  "position": "absolute",
                  "right": 20,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ed6109",
                    "borderRadius": 50,
                    "height": 30,
                    "justifyContent": "center",
                    "width": 30,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#ff9933",
                      "borderRadius": 50,
                      "height": 25,
                      "width": 25,
                    }
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": "white",
                          "fontSize": 23,
                        },
                        Object {
                          "alignSelf": "center",
                          "justifyContent": "center",
                        },
                        Object {
                          "fontFamily": "Material Icons",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    î—ˆ
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
